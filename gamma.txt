#include<stdio.h>
#include<Windows.h>
#include<time.h>

typedef enum Boolean {
	false = 0,
	true = 1
}Bool;
//Data Store들을 정의하기
typedef struct Mode {
	Bool alarm_buzzing;
	int category_alpha; //대분류
	int category_beta; //소분류
	Bool stopwatch_indicator; //indicator 켜졌는지,
	Bool alarm_indicator; //indicator 꺼졌는지,
}mode;
typedef struct Time {
	int YY; //년도
	int MT; //월
	int DD; //일
	int HH; //시
	int MM; //분
	int SS; //초
	int MS; //ms
}Time;
typedef struct Alarm { //시작 시간
	Time alarmTime;
}alm;
typedef struct StopWatch {
	//LapTime은 StartTime을 기반으로 업데이트 된다.
	Time stopwatchTime;
	Time startTime;
	Time lapTime;

}stopwatch;
//Data Store들 선언하기
alm AL; //알람
stopwatch ST; //스톱워치
mode MD; //모드
Time CT; //현재 시간
int Backlight; //글자색
//0 : Alarm Buzzing, 1 : 대분류, 2: 소분류 , 3 : Stopwatch_Indicator, 4 : Alarm indicator

//파일이 나뉘어 있지 않아 뜬금없이 show()를 선언합니다... Panel_and_Speaker_Controller 에서 사용하는 함수입니다
void show(int alpha_cat, char list[7][3], int blink_location) {
	//alpha_cat는 대분류를 뜻합니다. 대분류에 따라 표시될 화면의 구성이 조금씩 다릅니다.
	//list는 7개의 위치에 해당하는 문자열입니다. 모두 두 글자로 이루어져 있습니다.
	//blink_location은 깜빡일 화면의 위치를 뜻합니다.(0에서 7의 값을 가집니다)
	//blink_location이 0일 경우는 모든 화면을 표시합니다. Panel_and_Speaker_Controller에서
	//시간의 경과를 판별한 뒤, %연산(을 이용할 계획)을 이용하여 깜빡임을 구현합니다.(0과 위치를 적절히 전달)
	//결론은, blink_location이 0이면 모든 위치의 화면을 표시,
	//그렇지 않으면 지정된 위치(blink_location)의 화면을 표시하지 않습니다.
	if (blink_location) {
		list[blink_location - 1][0] = ' ';
		list[blink_location - 1][1] = ' ';
	}

	if (alpha_cat == 1) {//Tikekeeping
		printf("        ####################\n");
		printf("     ###                    ###\n");
		printf("  ###      %s       %s/%s      ###\n", list[0], list[1], list[2]);
		printf("##                                ##\n");
		printf("##    %s                          ##\n", list[3]);
		printf("##          %s : %s . %s          ##\n", list[4], list[5], list[6]);
		printf("  ###                          ###\n");
		printf("     ###                    ###\n");
		printf("        ####################\n");
	}
	else if (alpha_cat == 2) {//Stopwatch
		printf("        ####################\n");
		printf("     ###                    ###\n");
		printf("  ###      %s       %s:%s      ###\n", list[0], list[1], list[2]);
		printf("##                                ##\n");
		printf("##    %s                          ##\n", list[3]);
		printf("##          %s\'  %s\"  %s          ##\n", list[4], list[5], list[6]);
		printf("  ###                          ###\n");
		printf("     ###                    ###\n");
		printf("        ####################\n");
	}
	else if (alpha_cat == 3) {//Alarm
		printf("        ####################\n");
		printf("     ###                    ###\n");
		printf("  ###      %s       %s/%s      ###\n", list[0], list[1], list[2]);
		printf("##                                ##\n");
		printf("##    %s                          ##\n", list[3]);
		printf("##          %s : %s               ##\n", list[4], list[5]);
		printf("  ###                          ###\n");
		printf("     ###                    ###\n");
		printf("        ####################\n");
	}
}

void configure_set(char list[7][3], int location, char goal[3]) {
	//list엔 configure 될 값들이
	//location엔 0에서 6사이의 변경할 위치
	//goal에는 바꿀 값이 들어있다
	list[location][0] = goal[0];
	list[location][1] = goal[1];
	list[location][2] = '\0';
	return;
}

void int_to_str(int to, char temp[3]) {
	// to는 두 자리 이하의 자연수라는 것을 가정하고 사용
	if (to < 10) {
		temp[0] = '0';
		temp[1] = (char)(to + '0');
		temp[2] = '\0';
	}
	else {
		temp[0] = (char)(to / 10 + '0');
		temp[1] = (char)(to % 10 + '0');
		temp[2] = '\0';
	}
	return;
}

void Panel_and_Speaker_Controller() {
	int flag1 = MD.category_alpha;
	int flag2 = MD.category_beta;
	char list[7][3]; // configure된 값들을 저장
	int blink_location = 0;
	char temp[3] = "  "; // 임시로 쓰일 저장소
		// 깜빡일 위치를 저장
		//만약 깜빡임을 구현하기 위해 깜빡일 위치를
		//표시하여야 할 경우는 0을 저장한다


	//if문들로 각각에 맞게 configure
	//configure 된 값들은 모두 2글자의 문자열이다 + 깜빡일 위치

	//alarm_indicator의 경우 공통되었으므로 미리 만들어 두었다
	if (MD.stopwatch_indicator) temp[1] = 'A';
	configure_set(list, 3, temp);

	switch (flag1) {
	case 1: // Timekeeping 모드
		switch (TD.WD) {
		case 0://Sunday
			temp[0] = 'S'; temp[1] = 'U'; break;
		case 1://Monday
			temp[0] = 'M'; temp[1] = 'O'; break;
		case 2://Tuesday
			temp[0] = 'T'; temp[1] = 'U'; break;
		case 3://Wendsday
			temp[0] = 'W'; temp[1] = 'E'; break;
		case 4://Thursday
			temp[0] = 'T'; temp[1] = 'H'; break;
		case 5://Friday
			temp[0] = 'F'; temp[1] = 'R'; break;
		case 6://Saturday
			temp[0] = 'S'; temp[1] = 'A'; break;
		default: break;
		}
		temp[2] = '\0';
		configure_set(list, 0, temp);
		int_to_str(CT.MM, temp);
		if (CT.MM < 10) temp[0] = ' ';
		configure_set(list, 1, temp);
		int_to_str(CT.DD, temp);
		configure_set(list, 2, temp);
		int_to_str(CT.HH, temp);
		configure_set(list, 4, temp);
		int_to_str(CT.MM, temp);
		configure_set(list, 5, temp);
		int_to_str(CT.SS, temp);
		configure_set(list, 6, "");
		switch (flag2) {
		case 1: case 5: defalut: break; // (1,1)이거나 년도를 바꿀 경우 blink_location = 0이다.
		case 2: blink_location = 7; break;// 초
		case 3: blink_location = 5; break;// 시간
		case 4: blink_location = 6; break;// 분
		case 6: blink_location = 2; break; // 월
		case 7: blink_location = 3; break;// 일
		}
		break;
	case 2: // Stopwatch 모드
		configure_set(list, 0, "ST");
		int_to_str(CT.HH, temp);
		configure_set(list, 1, temp);
		int_to_str(CT.MM, temp);
		configure_set(list, 2, temp);
		if (flag2 == 1) {//Stopwatch
			int_to_str(ST.stopwatchTime.MM, temp);
			configure_set(list, 4, temp);
			int_to_str(ST.stopwatchTime.SS, temp);
			configure_set(list, 5, temp);
			int_to_str(ST.stopwatchTime.MS, temp);
			configure_set(list, 6, temp);
		}
		if (flag2 == 2) {//LAP
			int_to_str(ST.lapTime.MM, temp);
			configure_set(list, 4, temp);
			int_to_str(ST.lapTime.SS, temp);
			configure_set(list, 5, temp);
			int_to_str(ST.lapTime.MS, temp);
			configure_set(list, 6, temp);
		}
		break;
	case 3: // Alarm 모드
		configure_set(list, 0, "AL");
		int_to_str(CT.MM, temp);
		if (CT.MM < 10) temp[0] = ' ';
		configure_set(list, 1, temp);
		int_to_str(CT.DD, temp);
		configure_set(list, 2, temp);
		int_to_str(AL.alarmTime.HH, temp);
		configure_set(list, 4, temp);
		int_to_str(AL.alarmTime.MM, temp);
		configure_set(list, 5, temp);
		configure_set(list, 6, "  ");
		if (flag2 == 2) blink_location = 5; // 시간
		else if (flag2 == 3) blink_location = 6; // 분
		break;
	default: // 엄밀한 명세에 의하면 없어도 되는 코드
			break;
	}


	//show()를 구현하여 configure된 값들을 표시
	//1초에 한번씩 깜빡일 예정
	if (CT.SS % 2) blink_location = 0;
	show(flag1, list, blink_location);

	return;
}


int main() {

}
